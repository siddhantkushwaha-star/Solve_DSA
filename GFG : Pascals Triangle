GFG : Pascals Triangle

Difficulty: MediumAccuracy: 23.68%Submissions: 122K+Points: 4Average Time: 20m
Given a positive integer n, return the nth row of pascal's triangle.
Pascal's triangle is a triangular array of the binomial coefficients formed by summing up the elements of previous row.

File:PascalTriangleAnimated2.gif

Examples:

Input: n = 4
Output: [1, 3, 3, 1]
Explanation: 4th row of pascal's triangle is [1, 3, 3, 1].
Input: n = 5
Output: [1, 4, 6, 4, 1]
Explanation: 5th row of pascal's triangle is [1, 4, 6, 4, 1].
Input: n = 1
Output: [1]
Explanation: 1st row of pascal's triangle is [1].
Constraints:
1 ≤ n ≤ 20

Solution : 

class Solution {

    ArrayList<Integer> nthRowOfPascalTriangle(int n) {
        // code here
        ArrayList<Integer> row = new ArrayList<>();
        long val = 1;
        row.add(1); // First element is always 1

        // Generate values using the formula: C(n-1, k) = C(n-1, k-1) * (n-k)/k
        for (int k = 1; k < n; k++) {
            val = val * (n - k);
            val = val / k;
            row.add((int)(val % 1000000007));
        }

        return row;
    }
}
